"use strict";(self.webpackChunkapigear=self.webpackChunkapigear||[]).push([[6568],{3905:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>f});var o=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=o.createContext({}),c=function(e){var t=o.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},s=function(e){var t=c(e.components);return o.createElement(p.Provider,{value:t},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},m=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,p=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),d=c(n),m=r,f=d["".concat(p,".").concat(m)]||d[m]||u[m]||a;return n?o.createElement(f,i(i({ref:t},s),{},{components:n})):o.createElement(f,i({ref:t},s))}));function f(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,i=new Array(a);i[0]=m;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l[d]="string"==typeof e?e:r,i[1]=l;for(var c=2;c<a;c++)i[c]=n[c];return o.createElement.apply(null,i)}return o.createElement.apply(null,n)}m.displayName="MDXCreateElement"},4347:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>i,default:()=>d,frontMatter:()=>a,metadata:()=>l,toc:()=>c});var o=n(7462),r=(n(7294),n(3905));const a={sidebar_position:2},i="Code Generation",l={unversionedId:"cli/generate",id:"cli/generate",title:"Code Generation",description:"The generate command is used to generate code from a API description. The generation is based on SDK templates which are available from a central registry.",source:"@site/docs/cli/generate.md",sourceDirName:"cli",slug:"/cli/generate",permalink:"/docs/cli/generate",draft:!1,editUrl:"https://github.com/apigear-io/apigear-docs/edit/main/docs/cli/generate.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"docsSidebar",previous:{title:"Introduction",permalink:"/docs/cli/intro"},next:{title:"API Monitoring",permalink:"/docs/cli/monitor"}},p={},c=[{value:"Quick Code Generation",id:"quick-code-generation",level:2},{value:"Solution based Code Generation",id:"solution-based-code-generation",level:2}],s={toc:c};function d(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,o.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"code-generation"},"Code Generation"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"generate")," command is used to generate code from a API description. The generation is based on SDK templates which are available from a central registry."),(0,r.kt)("h2",{id:"quick-code-generation"},"Quick Code Generation"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"apigear")," command line tool can be used to generate code from an API definition. The following example shows how to generate code from the a demo API definition."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-go"},"// demo.idl\nmodule demo 1.0\n\ninterface Counter {\n    count: int\n    increment()\n    decrement()\n}\n")),(0,r.kt)("p",null,"For example to generate a C++ 14 SDK from the demo API definition just run the following command."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"apigear generate expert -i demo.idl -o tmp -t apigear-io/template-cpp14\n")),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"expert")," mode is used to generate code from an IDL file. The ",(0,r.kt)("inlineCode",{parentName:"p"},"-i")," option specifies the input file. The ",(0,r.kt)("inlineCode",{parentName:"p"},"-o")," option specifies the output directory. The ",(0,r.kt)("inlineCode",{parentName:"p"},"-t")," option specifies the template to use. The ",(0,r.kt)("inlineCode",{parentName:"p"},"template-cpp14")," template is used to generate C++ 14 code."),(0,r.kt)("p",null,"If the template does not point to a local directory the template will be downloaded from the template registry and installed in a local cache directory."),(0,r.kt)("p",null,"By default the latest version of the template is used. To use a specific version of the template add the version to the template name using the ",(0,r.kt)("inlineCode",{parentName:"p"},"@<version>")," syntax."),(0,r.kt)("h2",{id:"solution-based-code-generation"},"Solution based Code Generation"),(0,r.kt)("p",null,"To streamline the code generation you can create a configuration file called solution. The following example shows how to create a configuration file for the C++ 14 SDK."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"# solution.yaml\nlayers:\n  - name: cpp14\n    inputs:\n      - demo.idl\n    output: tmp\n    template: template-cpp14\n")),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"layers")," section defines the layers of the solution. Each layer defines a set of inputs, an output directory and a template. The ",(0,r.kt)("inlineCode",{parentName:"p"},"inputs")," section defines the input files for the layer. The ",(0,r.kt)("inlineCode",{parentName:"p"},"output")," section defines the output directory for the layer. The ",(0,r.kt)("inlineCode",{parentName:"p"},"template")," section defines the template to use for the layer."),(0,r.kt)("p",null,"To generate the code from the solution just run the following command."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"apigear generate solution solution.yaml\n")))}d.isMDXComponent=!0}}]);